public class Solution {
    public ArrayList<ArrayList<Integer>> combinationSum2(int[] num, int target) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> temp = new ArrayList<Integer>();
        Arrays.sort(num);
        helpler(result, temp, num, target, 0);
        return result;
    }
    private void helpler(ArrayList<ArrayList<Integer>> result, ArrayList<Integer> temp, int[] num, int target, int start)
    {
        if(target < 0 || start > num.length)
            return;
        if(target == 0)
        {
            ArrayList<Integer> copy = new ArrayList<Integer>(temp);
            if(!result.contains(temp)) //avoid duplicates
                result.add(copy);
        }
        else{
            for(int i=start; i<num.length; i++)
            {
            if(num[i] > target)
                break;
            temp.add(num[i]);
            helpler(result, temp, num, target-num[i], i+1);
            temp.remove(temp.size()-1);
            }//end for
        }//end else
    }
}
