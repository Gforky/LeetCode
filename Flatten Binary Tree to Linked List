/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void flatten(TreeNode root) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        ArrayList<TreeNode> container = new ArrayList<TreeNode>();
        helpler(root, container);
        for(int i=0; i<container.size(); i++)
        {
            container.get(i).left = null;
            if(i == container.size()-1)
                container.get(i).right = null;
            else
                container.get(i).right = container.get(i+1);
        }
    }
    private void helpler(TreeNode root, ArrayList<TreeNode> container)
    {
        if(root == null)
            return;
        container.add(root);
        helpler(root.left, container);
        helpler(root.right, container);
    }
}
