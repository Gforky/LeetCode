/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isBalanced(TreeNode root) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        if(null == root) return true;
        int left_height = 0, right_height = 0;
        left_height = height(root.left);
        right_height = height(root.right);
        int diff = (int)Math.abs(left_height-right_height);
        if(diff>1) 
            return false;
        else 
            return isBalanced(root.left) & isBalanced(root.right);
    }
    private int height(TreeNode node){
        int height = 0;
        if(node != null) 
        {
            height+=1;
            return height+=(int)Math.max(height(node.left), height(node.right));
        }
        else
            return height;
    }
}
