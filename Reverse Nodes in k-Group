/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        if(head == null)
            return null;
        ListNode end = head;
        int max = 0;
        while(end != null)
        {
            end = end.next;
            max++;
        }
        if(max < k)
            return head;
        ListNode root = new ListNode(-1);
        root.next = head;
        ListNode current = head;
        ListNode pivot = root;
        int operations = max/k;
        for(int i=0; i<operations; i++)
        {
            for(int j=1; j<k; j++)
            {
                ListNode temp = current.next;
                current.next = current.next.next;
                temp.next = pivot.next;
                pivot.next = temp;
                if(j == k-1)
                {
                    pivot = current;
                    current = current.next;
                }
            }
        }
        return root.next;
    }
}
