/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        ListNode head = null;
        if(l1 == null && l2 == null) return null;
        else if(l1 == null) return l2;
        else if(l2 == null) return l1;
        /* recursive !!!!!! */
        if(l1.val <= l2.val)
        {
          head = l1;
          l1 = l1.next;
          head.next = mergeTwoLists(l1, l2);
        }
        else{
            head = l2;
            l2 = l2.next;
            head.next = mergeTwoLists(l1, l2);
        }
        return head;
    }
}
