public class Solution {
    public int search(int[] A, int target) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        if(A.length == 0) return -1;
        if(A.length == 1)
            if(A[0] == target)
                return 0;
            else
                return -1;
        int start=1, end=0;
        while(start<A.length && A[start]>A[end])
        {
            start++;
            end++;
        }
        if(start == A.length)  //no rotation, attention after the while loop, if no A[start] > A[end], start will finally be A.length
        {
            start = 0;
            end = A.length-1;
        }
        if(target>A[end] || target<A[start])
            return -1;
        else if(target == A[0])
            return 0;
        else if(target > A[0])
            return helpler(A, 0, end, target);
        else
            return helpler(A, start, A.length-1, target);
    }
    private int helpler(int[] A, int low, int high, int target)
    {
        if(low>high)
            return -1;
        int mid = (low+high)/2;
        if(A[mid] == target)
            return mid;
        else if(A[mid]>target)
            return helpler(A, low, mid-1, target);
        else
            return helpler(A, mid+1, high, target);
    }
}
