/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        if(root == null) return;
        TreeLinkNode temp = root.next;
            if(root.right != null)
            {
                while(temp != null && root.right.next == null)
                {
                if(temp.left != null)
                    root.right.next = temp.left;
                else if(temp.right != null)
                    root.right.next = temp.right;
                else
                    temp = temp.next;
                }
                connect(root.right);
            }
            if(root.left != null)
                {
                    if(root.right != null)
                        root.left.next = root.right;
                    else{
                        while(temp != null && root.left.next == null)
                        {
                        if(temp.left != null)
                            root.left.next = temp.left;
                        else if(temp.left == null && temp.right != null)
                            root.left.next = temp.right;
                        else
                            temp = temp.next;
                        }
                    }
                    connect(root.left);
                }
    }
}
