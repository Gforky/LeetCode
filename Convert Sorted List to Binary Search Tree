/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        ArrayList<Integer> list = new ArrayList<Integer>();
        while(head != null)
        {
            list.add(head.val);
            head = head.next;
        }
        return helpler(list, 0, list.size()-1);
    }
    private TreeNode helpler(ArrayList<Integer> list, int left, int right){
        if(list.size() == 0 || right < 0 || left > list.size()-1 || left > right)
            return null;
        int mid = (int)Math.floor((left+right)/2);
        TreeNode root = new TreeNode(0);
        root.val = list.get(mid);
        root.left = helpler(list, left, mid-1);
        root.right = helpler(list, mid+1, right);
        return root;
    }
}
